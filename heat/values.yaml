# Copyright 2017 The Openstack-Helm Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for keystone.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

release_group: null

labels:
  node_selector_key: openstack-control-plane
  node_selector_value: enabled

images:
  bootstrap: docker.io/kolla/ubuntu-source-heat-api:3.0.3
  db_init: docker.io/kolla/ubuntu-source-heat-api:3.0.3
  db_sync: docker.io/kolla/ubuntu-source-heat-api:3.0.3
  ks_user: docker.io/kolla/ubuntu-source-kolla-toolbox:3.0.3
  ks_service: docker.io/kolla/ubuntu-source-kolla-toolbox:3.0.3
  ks_endpoints: docker.io/kolla/ubuntu-source-kolla-toolbox:3.0.3
  api: docker.io/kolla/ubuntu-source-heat-api:3.0.3
  cfn: docker.io/kolla/ubuntu-source-heat-api:3.0.3
  cloudwatch: docker.io/kolla/ubuntu-source-heat-api:3.0.3
  engine: docker.io/kolla/ubuntu-source-heat-engine:3.0.3
  dep_check: docker.io/kolla/ubuntu-source-kubernetes-entrypoint:4.0.0
  pull_policy: "IfNotPresent"

conf:
  paste:
    override:
    append:
  policy:
    override:
    append:
  heat:
    override:
    append:
    default:
      heat:
        common:
          config:
            num_engine_workers: 4
            trusts_delegated_roles: _member_
    keystone_authtoken:
      keystonemiddleware:
        auth_token:
          auth_type: password
          auth_version: v3
    trustee:
      heat:
        common:
          context:
            auth_section: trustee
            auth_type: password
            auth_version: v3
    heat_api:
      heat:
        common:
          wsgi:
            bind_port: 8004
            workers: 4
    heat_api_cloudwatch:
      heat:
        common:
          wsgi:
            bind_port: 8003
            workers: 4
    heat_api_cfn:
      heat:
        common:
          wsgi:
            bind_port: 8000
            workers: 4
    paste_deploy:
      heat.common:
        config:
          api_paste_config: /etc/heat/api-paste.ini
    clients:
      heat:
        common:
          config:
            endpoint_type: internalURL
    clients_keystone:
      heat:
        common:
          config:
            endpoint_type: internalURL

network:
  api:
    ingress:
      public: true
    node_port:
      enabled: false
      port: 30004
  cfn:
    ingress:
      public: true
    node_port:
      enabled: false
      port: 30800
  cloudwatch:
    ingress:
      public: true
    node_port:
      enabled: false
      port: 30003

bootstrap:
  enabled: false
  script: |
    openstack token issue

dependencies:
  db_init:
    services:
    - service: oslo_db
      endpoint: internal
  db_sync:
    jobs:
    - heat-db-init
    services:
    - service: oslo_db
      endpoint: internal
  ks_user:
    services:
    - service: identity
      endpoint: internal
  ks_service:
    services:
    - service: identity
      endpoint: internal
  ks_endpoints:
    jobs:
    - heat-ks-service
    services:
    - service: identity
      endpoint: internal
  api:
    jobs:
    - heat-db-sync
    - heat-ks-user
    - heat-ks-endpoints
    services:
    - service: oslo_db
      endpoint: internal
    - service: identity
      endpoint: internal
  cfn:
    jobs:
    - heat-db-sync
    - heat-ks-user
    - heat-ks-endpoints
    services:
    - service: oslo_db
      endpoint: internal
    - service: identity
      endpoint: internal
  cloudwatch:
    jobs:
    - heat-db-sync
    - heat-ks-user
    - heat-ks-endpoints
    services:
    - service: oslo_db
      endpoint: internal
    - service: identity
      endpoint: internal
  engine:
    jobs:
    - heat-db-sync
    - heat-ks-user
    - heat-ks-endpoints
    services:
    - service: oslo_db
      endpoint: internal
    - service: identity
      endpoint: internal

# Names of secrets used by bootstrap and environmental checks
secrets:
  identity:
    admin: heat-keystone-admin
    user: heat-keystone-user
    trustee: heat-keystone-trustee
    stack_user: heat-keystone-stack-user
  oslo_db:
    admin: heat-db-admin
    user: heat-db-user

# typically overriden by environmental
# values, but should include all endpoints
# required by this chart
endpoints:
  identity:
    name: keystone
    auth:
      admin:
        region_name: RegionOne
        username: admin
        password: password
        project_name: admin
        user_domain_name: default
        project_domain_name: default
      user:
        role: admin
        region_name: RegionOne
        username: heat
        password: password
        project_name: service
        user_domain_name: default
        project_domain_name: default
      trustee:
        role: admin
        region_name: RegionOne
        username: heat-trust
        password: password
        project_name: service
        user_domain_name: default
        project_domain_name: default
      stack_user:
        role: admin
        region_name: RegionOne
        username: heat-trust
        password: password
        domain_name: heat
    hosts:
      default: keystone-api
      public: keystone
    path:
      default: /v3
    scheme:
      default: 'http'
    port:
      admin:
        default: 35357
      api:
        default: 80
  orchestration:
    name: heat
    hosts:
      default: heat-api
      public: heat
    path:
      default: '/v1/%(project_id)s'
    scheme:
      default: 'http'
    port:
      api:
        default: 8004
        public: 80
  cloudformation:
    name: heat-cfn
    hosts:
      default: heat-cfn
      public: cloudformation
    path:
      default: /v1
    scheme:
      default: 'http'
    port:
      api:
        default: 8000
        public: 80
# Cloudwatch does not get an entry in the keystone service catalog
  cloudwatch:
    name: heat-cloudwatch
    hosts:
      default: heat-cloudwatch
      public: cloudwatch
    path:
      default: null
    type: null
    scheme:
      default: 'http'
    port:
      api:
        default: 8003
        public: 80
  oslo_db:
    auth:
      admin:
        username: root
        password: password
      user:
        username: heat
        password: password
    hosts:
      default: mariadb
    path: /heat
    scheme: mysql+pymysql
    port:
      mysql:
        default: 3306
  oslo_cache:
    hosts:
      default: memcached
    port:
      memcache:
        default: 11211
  oslo_messaging:
    auth:
      admin:
        username: admin
        password: password
      user:
        username: rabbitmq
        password: password
    hosts:
      default: rabbitmq
    path: /
    scheme: rabbit
    port:
      amqp:
        default: 5672

pod:
  affinity:
      anti:
        type:
          default: preferredDuringSchedulingIgnoredDuringExecution
        topologyKey:
          default: kubernetes.io/hostname
  mounts:
    heat_api:
      init_container: null
      heat_api:
    heat_cfn:
      init_container: null
      heat_cfn:
    heat_cloudwatch:
      init_container: null
      heat_cloudwatch:
    heat_engine:
      init_container: null
      heat_engine:
    heat_bootstrap:
      init_container: null
      heat_bootstrap:
  replicas:
    api: 1
    cfn: 1
    cloudwatch: 1
    engine: 1
  lifecycle:
    upgrades:
      deployments:
        revision_history: 3
        pod_replacement_strategy: RollingUpdate
        rolling_update:
          max_unavailable: 1
          max_surge: 3
    disruption_budget:
      api:
        min_available: 0
      cfn:
        min_available: 0
      cloudwatch:
        min_available: 0
    termination_grace_period:
      api:
        timeout: 30
      cfn:
        timeout: 30
      cloudwatch:
        timeout: 30
  resources:
    enabled: false
    api:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "1024Mi"
        cpu: "2000m"
    cfn:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "1024Mi"
        cpu: "2000m"
    cloudwatch:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "1024Mi"
        cpu: "2000m"
    engine:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "1024Mi"
        cpu: "2000m"
    jobs:
      bootstrap:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"
      db_init:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"
      db_sync:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"
      ks_endpoints:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"
      ks_service:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"
      ks_user:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"
      tests:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"

manifests:
  configmap_bin: true
  configmap_etc: true
  deployment_api: true
  deployment_cfn: true
  deployment_cloudwatch: true
  ingress_api: true
  ingress_cfn: true
  ingress_cloudwatch: true
  job_bootstrap: true
  job_db_init: true
  job_db_sync: true
  job_ks_endpoints: true
  job_ks_service: true
  job_ks_user: true
  pdb_api: true
  pdb_cfn: true
  pdb_cloudwatch: true
  secret_db: true
  secret_keystone: true
  service_api: true
  service_cfn: true
  service_cloudwatch: true
  service_ingress_api: true
  service_ingress_cfn: true
  service_ingress_cloudwatch: true
  statefulset_engine: true
